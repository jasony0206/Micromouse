//HBRIDGE pins
//Vcc1: to 5V
//Vcc2: to 7.4V (max power for motors)
//1,2EN*, 3,4 EN: to MCU
//1-4A*: to MCU
//1-4Y*: to motors
//sink 4 5 are wired to GND

//motor speed: 0 - 255. Use ANALOG. 12EN and 34EN.

#include "interrupt.h"
/*----------------------------INIT PINS------------------------*/
//LEFT WHEEL
const int leftMotorSpeed = 6;
const int a1 = 12;
const int a2 = 11;
//RIGHT WHEEL
const int rightMotorSpeed = 5;
const int a3 = 9;
const int a4 = 10;

//EMITTERS
const int leftEmt = 4;
const int fleftEmt = 23;
const int frightEmt = 22;
const int rightEmt = 19;
//RECEIVERS
const int leftRcv = 16;
const int fleftRcv = 17;
const int frightRcv = 21;
const int rightRcv = 20;

void setup() {
  Serial.begin(9600);
  //WHEEL LOGIC PINS
  pinMode(a1, OUTPUT);
  pinMode(a2, OUTPUT);
  pinMode(a3, OUTPUT);
  pinMode(a4, OUTPUT);
  pinMode(leftMotorSpeed, OUTPUT);
  pinMode(rightMotorSpeed, OUTPUT);
  //EMITTERS
  pinMode(leftEmt, OUTPUT);
  pinMode(fleftEmt, OUTPUT);
  pinMode(frightEmt, OUTPUT);
  pinMode(rightEmt, OUTPUT);
  //RECEIVERS
  pinMode(leftRcv, INPUT);
  pinMode(fleftRcv, INPUT);
  pinMode(frightRcv, INPUT);
  pinMode(rightRcv, INPUT);
}

/*----------------------------MAIN LOOP------------------------------*/
void loop(){
  goForward();
  delay(500);
}

/*----------------------------MOTOR FUNCTIONS------------------------*/
void goForward(){
  digitalWrite(a1, LOW);
  digitalWrite(a2, HIGH);
  digitalWrite(a3, LOW);
  digitalWrite(a4, HIGH);
  analogWrite(leftMotorSpeed,17);
  analogWrite(rightMotorSpeed,17);  
}

void goBackward(){  
  digitalWrite(a1, HIGH);
  digitalWrite(a2, LOW);
  digitalWrite(a3, HIGH);
  digitalWrite(a4, LOW);  
  analogWrite(leftMotorSpeed, 17);
  analogWrite(rightMotorSpeed, 17);  
}

void turnLeft(){
  digitalWrite(a1, HIGH);
  digitalWrite(a2, LOW);    
  digitalWrite(a3, LOW);
  digitalWrite(a4, HIGH);
  analogWrite(leftMotorSpeed,17);
  analogWrite(rightMotorSpeed,17);
}

void turnRight(){
  digitalWrite(a1, LOW);
  digitalWrite(a2, HIGH);
  digitalWrite(a3, HIGH);
  digitalWrite(a4, LOW);
  analogWrite(leftMotorSpeed,17);
  analogWrite(rightMotorSpeed,17);
}

void stp(){
  digitalWrite(a1, LOW);
  digitalWrite(a2, LOW);
  digitalWrite(a3, LOW);
  digitalWrite(a4, LOW);
  analogWrite(leftMotorSpeed,0);
  analogWrite(rightMotorSpeed,0); 
}

/*----------------------------SENSOR FUNCTIONS------------------------*/
int getIR(const int emitter, const int receiver){
  digitalWrite(emitter, LOW);
  delay(100); 
  int ambient = analogRead(receiver);
  digitalWrite(emitter, HIGH);
  delay(100);
  int apparent = analogRead(receiver);
  digitalWrite(emitter, LOW);
  return apparent - ambient;
}

boolean checkWalls(){
  digitalWrite(leftEmt, LOW);
  digitalWrite(fleftEmt, LOW);
  digitalWrite(rightEmt, LOW);
  digitalWrite(frightEmt, LOW);
  delay(100);
  int leftAmbient = analogRead(leftRcv);
  int fleftAmbient = analogRead(fleftRcv);
  int rightAmbient = analogRead(rightRcv);
  int frightAmbient = analogRead(frightRcv);
}
